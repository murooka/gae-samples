buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.+'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.google.cloud.tools.appengine'

mainClassName = 'jersey.java11.Main'

dependencies {
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation "org.glassfish.jersey.containers:jersey-container-servlet:2.28"
    implementation "org.glassfish.jersey.inject:jersey-hk2:2.28"
    implementation 'com.googlecode.objectify:objectify:6.0.4'
    implementation 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.9'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.28'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'javax.activation:javax.activation-api:1.2.0'
}

appengine {
    stage {
        artifact = shadowJar.archiveFile
    }
    deploy {
        promote = true
    }
}

run {
    standardInput = System.in
}

test {
    useJUnit()
    testLogging.showStandardStreams = true
    beforeTest { descriptor ->
        logger.lifecycle("test: " + descriptor + "  Running")
    }

    onOutput { descriptor, event ->
        logger.lifecycle("test: " + descriptor + ": " + event.message)
    }
    afterTest { descriptor, result ->
        logger.lifecycle("test: " + descriptor + ": " + result)
    }
}

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8
